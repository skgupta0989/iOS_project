//
//  DeleteCurrentEmployee.m
//  UniversalEmployeeDBMSSystem
//
//  Created by Sandeep Kumar Gupta on 27/10/13.
//
//

#import "DeleteCurrentEmployee.h"
#define employeeDeleteUrl @"http://10.132.161.59:8080/EmployeeDetailsManagement/employee/deleteEmployee"


@implementation DeleteCurrentEmployee




- (BOOL)deleteRecord :(NSMutableDictionary *)empRecord
{
    
    NSURL *url = [NSURL URLWithString:employeeDeleteUrl];
    
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url
                                                           cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:10.0];
    //NSDictionary *empRecord = [NSMutableDictionary dictionaryWithObjectsAndKeys:max,@"max",offset,@"offset",nil];
    NSLog(@" **** empRecord %@",empRecord );
    //    NSNumber *empId = [empRecord objectForKey:@"employeeId"];
    //    long int eId = [empId longValue];
    //    empId = [[NSNumber alloc]initWithLong:eId ];
    //[empRecord setObject:eId forKey:@"employeeId"];
    //selectedEmailId = [empRecord objectForKey:@"email"];
    NSData* jsonData = [NSJSONSerialization dataWithJSONObject:empRecord options:0 error:nil];
    NSLog(@" json data  %@", jsonData);
    [request setHTTPMethod:@"POST"];
    [request setValue:@"application/json" forHTTPHeaderField:@"Accept"];
    [request setValue:@"application/json" forHTTPHeaderField:@"Content-Type"];
    [request setValue:[NSString stringWithFormat:@"%d", [jsonData length]] forHTTPHeaderField:@"Content-Length"];
    [request setHTTPBody: jsonData];
    
    
    NSError *error;
    
    
    NSURLResponse * response = nil;
    //NSURLConnection *connection = [[NSURLConnection alloc] initWithRequest:request delegate:self];
    NSData * data = [NSURLConnection sendSynchronousRequest:request
                                          returningResponse:&response
                                                      error:&error];
    
    NSLog(@">>>>>>>>>>>>> Request Sent >>>>>>>>>>>> ");
    
    NSMutableDictionary* json = [NSJSONSerialization
                                 JSONObjectWithData:data
                                 
                                 options:kNilOptions
                                 error:&error];
    //NSLog(@"json %@",json);
    NSString *result = [json objectForKey:@"message"];
    if([result isEqualToString:@"employee deleted"])
    {
        return YES;
    }
    else
    {
        return NO;
    }
    
}




- (void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response {
    NSLog(@"didReceiveResponse");
}




- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data {
    
    //    NSString *jsonString = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];
    //    NSLog(@" jsonString : %@",jsonString);
    //    NSError* error;
    //    NSDictionary* json = [NSJSONSerialization
    //                          JSONObjectWithData:data
    //
    //                          options:kNilOptions
    //                          error:&error];
    //    NSLog(@"json %@",json);
    //
    //    NSString* statusMessage = [json objectForKey:@"object"];
    //    NSLog(@"statusMessage %@",statusMessage);
    //    //self.selectedEmpId = [[SynchronizationViewController    sharedSynchronizationViewController] selectedEmpId];
    //
    //    if(statusMessage ==NULL)
    //    {//If the employee record is not get added, it's because duplication of email id....
    //        UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"Employee Exists !" message:@"You're trying to sync with existing emp..." delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil ];
    //
    //        [alertView show];
    //    }
    //
    //    else
    //    {
    //        //If the employee record is added update the record's empid as autogenerated value, syncFlag as 1.
    //
    //        //[[DatabaseConnectivity sharedDatabaseConnectivity] removeDuplicate:(NSString *)statusMessage :selectedEmailId :1];
    //        //[[DatabaseConnectivity sharedDatabaseConnectivity] deleteRemoteData:selectedEmailId];
    //        //LoadRemoteDataClass *loadRemoteDataClass =[[ LoadRemoteDataClass alloc]init] ;
    //        //[loadRemoteDataClass getRemoteData];
    //
    //        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    //        {
    //            ///SynchronizationViewController *syncViewController = [[SynchronizationViewController alloc]initWithNibName:@"SynchronizationViewController" bundle:nil];
    //
    //            //[syncViewController viewWillAppear:YES];
    //
    //        }
    //
    //
    //    }
    
}




- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error {
    NSLog(@"didFailWithError");
    // NSLog([NSString stringWithFormat:@"Connection failed: %@", [error description]]);
    UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"Server Error !" message:@"Please try again later ......" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil ];
    [alertView show];
}



- (void)connectionDidFinishLoading:(NSURLConnection *)connection {
    NSLog(@"connectionDidFinishLoading");
    
    
}


@end
